# Variables
ENV_NAME=dcleaderboard
CONDA_ACTIVATE=bash -c "source $$(conda info --base)/etc/profile.d/conda.sh && conda activate $(ENV_NAME)"
INPUT_QMD=leaderboard.qmd
ABOUT_QMD=about.qmd
OUTPUT_HTML=leaderboard.html
ABOUT_HTML=about.html

.PHONY: all clean html install check-env update-env remove-env

# Vérifier que Conda est installé
check-conda:
	@command -v conda >/dev/null 2>&1 || { echo "❌ Conda n'est pas installé. Installez Anaconda ou Miniconda."; exit 1; }

# Créer l'environnement conda
create-env: check-conda
	@echo "📦 Création de l'environnement conda $(ENV_NAME)..."
	conda env create -f environment.yml
	@echo "✅ Environnement $(ENV_NAME) créé avec succès!"

# Mettre à jour l'environnement existant
update-env: check-conda
	@echo "🔄 Mise à jour de l'environnement conda $(ENV_NAME)..."
	conda env update -f environment.yml --prune
	@echo "✅ Environnement $(ENV_NAME) mis à jour!"

# Installer/mettre à jour l'environnement
install: check-conda
	@if conda env list | grep -q "^$(ENV_NAME) "; then \
		echo "🔄 L'environnement $(ENV_NAME) existe déjà, mise à jour..."; \
		$(MAKE) -f Makefile.conda update-env; \
	else \
		echo "📦 Création de l'environnement $(ENV_NAME)..."; \
		$(MAKE) -f Makefile.conda create-env; \
	fi

# Vérifier que l'environnement est prêt
check-env: install
	@echo "🔍 Vérification de l'environnement..."
	@bash -c "source $$(conda info --base)/etc/profile.d/conda.sh && conda activate $(ENV_NAME) && python -c 'import pandas, numpy, json, matplotlib; print(\"✅ Dépendances Python OK\")'"
	@bash -c "source $$(conda info --base)/etc/profile.d/conda.sh && conda activate $(ENV_NAME) && python -c 'import jupyter, nbformat, IPython; print(\"✅ Jupyter OK\")'"

# Compiler le leaderboard
html: check-env
	@echo "🛠️ Compilation Quarto..."
	@bash -c "source $$(conda info --base)/etc/profile.d/conda.sh && conda activate $(ENV_NAME) && quarto render $(INPUT_QMD) --to html"
	@echo "🛠️ Compilation de la page About..."
	@bash -c "source $$(conda info --base)/etc/profile.d/conda.sh && conda activate $(ENV_NAME) && quarto render $(ABOUT_QMD) --to html"
	@echo "✅ Compilation terminée! Fichiers générés:"
	@echo "   - $(OUTPUT_HTML)"
	@echo "   - $(ABOUT_HTML)"

# Cible principale
all: html

# Test de l'environnement
test-env: check-env
	@echo "🧪 Test de l'environnement conda..."
	@bash -c "source $$(conda info --base)/etc/profile.d/conda.sh && conda activate $(ENV_NAME) && python --version"
	@bash -c "source $$(conda info --base)/etc/profile.d/conda.sh && conda activate $(ENV_NAME) && which python"
	@bash -c "source $$(conda info --base)/etc/profile.d/conda.sh && conda activate $(ENV_NAME) && pip list | grep -E '(pandas|numpy|jupyter|quarto)'"

# Supprimer l'environnement
remove-env: check-conda
	@echo "🗑️ Suppression de l'environnement $(ENV_NAME)..."
	conda env remove -n $(ENV_NAME) -y
	@echo "✅ Environnement supprimé!"

# Nettoyer les fichiers générés
clean:
	@echo "🧹 Nettoyage des fichiers générés..."
	rm -f $(OUTPUT_HTML) $(ABOUT_HTML)
	rm -rf _site/
	@echo "✅ Nettoyage terminé!"

# Aide
help:
	@echo "📋 Commandes disponibles:"
	@echo "  make install     - Créer/mettre à jour l'environnement conda"
	@echo "  make all         - Compiler le leaderboard (cible par défaut)"
	@echo "  make html        - Compiler uniquement le HTML"
	@echo "  make test-env    - Tester l'environnement"
	@echo "  make clean       - Nettoyer les fichiers générés"
	@echo "  make remove-env  - Supprimer complètement l'environnement"
	@echo "  make help        - Afficher cette aide"
